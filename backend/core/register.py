from contextlib import asynccontextmanager

from fastapi import FastAPI

__all__ = ['register_app']

from starlette.middleware.cors import CORSMiddleware

from core.config import settings
from core.path_conf import STATIC_DIR

from middleware.access_middleware import AccessMiddleware

from utils.serializer import MsgSpecJSONResponse
from api.router import router as main_router


@asynccontextmanager
async def register_init(app: FastAPI):
    """
    –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª FastApi. –°–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î, Redis

    :return:
    """
    print("Run app")

    yield

    print("Stop app")
    #await redis_client.close()


def register_app():
    # FastAPI —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π
    app = FastAPI(
        title="üöÄ FastAPI Architecture 2024",
        version="1.0.0",
        description="""
## üéØ **FastAPI Best Architecture Project**

–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–π REST API, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫ FastAPI.

### ‚ú® **–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**

- üîê **JWT –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è** - –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- üë• **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏** - –ü–æ–ª–Ω—ã–π CRUD –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏
- üõ°Ô∏è **–°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π** - –ì–∏–±–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞  
- üìä **–ü–∞–≥–∏–Ω–∞—Ü–∏—è** - –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è –±–æ–ª—å—à–∏—Ö –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö
- üóÉÔ∏è **PostgreSQL + Redis** - –ù–∞–¥–µ–∂–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
- üìÅ **MinIO Integration** - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏ –∏ –æ–±—ä–µ–∫—Ç–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º
- üçÉ **MongoDB Support** - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ NoSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
- ‚ö° **Celery Tasks** - –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
- üß™ **100% Test Coverage** - –ü–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏
- üìö **Rich Documentation** - –ü–æ–¥—Ä–æ–±–Ω–∞—è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

### üèóÔ∏è **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:**

- **Clean Architecture** - –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª–æ–∏ (API, Service, Repository)
- **Type Safety** - –ü–æ–ª–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è —Å Pydantic
- **Error Handling** - –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫  
- **Logging** - –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
- **Validation** - –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- **Security** - –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

### üõ†Ô∏è **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫:**

- **FastAPI** - –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è API
- **SQLAlchemy 2.0** - ORM –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
- **Alembic** - –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
- **PostgreSQL** - –û—Å–Ω–æ–≤–Ω–∞—è —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –ë–î
- **Redis** - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–µ—Å—Å–∏–∏
- **MongoDB** - NoSQL –¥–æ–∫—É–º–µ–Ω—Ç–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ë–î
- **MinIO** - S3-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ –æ–±—ä–µ–∫—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
- **Celery** - –û—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á
- **Docker** - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è

### üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ API:**

–ù–∞—à API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ HTTP –º–µ—Ç–æ–¥—ã –∏ –∫–æ–¥—ã –æ—Ç–≤–µ—Ç–æ–≤.
–í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤.
        """,
        docs_url=settings.DOCS_URL,
        redoc_url=settings.REDOCS_URL,
        openapi_url=settings.OPENAPI_URL,
        default_response_class=MsgSpecJSONResponse,
        lifespan=register_init,
        contact={
            "name": "FastAPI Architecture Team",
            "url": "https://github.com/your-org/fastapi-architecture-2024",
            "email": "support@fastapi-architecture.com",
        },
        license_info={
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT",
        },
        servers=[
            {
                "url": "http://localhost:5001",
                "description": "üîß Development server"
            },
            {
                "url": "https://api-staging.example.com",
                "description": "üß™ Staging server"
            },
            {
                "url": "https://api.example.com", 
                "description": "üöÄ Production server"
            }
        ],
        tags_metadata=[
            {
                "name": "üë§ Authentication",
                "description": "**–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.** –í–∫–ª—é—á–∞–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –≤—Ö–æ–¥, –≤—ã—Ö–æ–¥, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏.",
            },
            {
                "name": "üë• Users",
                "description": "**–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.** CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–æ—Ñ–∏–ª–∏, —Å–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.",
            },
            {
                "name": "üõ°Ô∏è Permissions",
                "description": "**–°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π.** –°–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ—Å—É—Ä—Å–∞–º.",
            },
            {
                "name": "üìÅ Files",
                "description": "**–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏.** –ó–∞–≥—Ä—É–∑–∫–∞, —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏ —á–µ—Ä–µ–∑ MinIO –æ–±—ä–µ–∫—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.",
            },
            {
                "name": "üçÉ MongoDB",
                "description": "**NoSQL –æ–ø–µ—Ä–∞—Ü–∏–∏.** –†–∞–±–æ—Ç–∞ —Å MongoDB –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏.",
            },
            {
                "name": "‚ö° Tasks",
                "description": "**–§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏.** –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Celery –∑–∞–¥–∞—á–∞–º–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.",
            },
            {
                "name": "üß™ Examples",
                "description": "**–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.** –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π API.",
            },
        ],
        # –°—Ö–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        components={
            "securitySchemes": {
                "BearerAuth": {
                    "type": "http",
                    "scheme": "bearer",
                    "bearerFormat": "JWT",
                    "description": """
                    üîê **JWT Bearer Token Authentication**
                    
                    –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Bearer —Ç–æ–∫–µ–Ω:
                    
                    1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ —ç–Ω–¥–ø–æ–∏–Ω—Ç `/api/v1/user/login`
                    2. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫: `Authorization: Bearer <your-token>`
                    3. –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤—É–µ—Ç 2 –º–∏–Ω—É—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ refresh —Ç–æ–∫–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    
                    **–ü—Ä–∏–º–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞:**
                    ```
                    Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                    ```
                    """
                }
            }
        },
    )

    register_static_file(app)
    register_middleware(app)
    register_router(app)

    return app


def register_static_file(app: FastAPI):
    """
    nginx

    :param app:
    :return:
    """
    if settings.STATIC_FILES:
        import os

        from fastapi.staticfiles import StaticFiles

        if not os.path.exists(STATIC_DIR):
            os.mkdir(STATIC_DIR)
        app.mount('/static', StaticFiles(directory=STATIC_DIR), name='static')


def register_middleware(app: FastAPI):
    # Access log handler
    if settings.MIDDLEWARE_ACCESS:
        app.add_middleware(AccessMiddleware)

    # CORS: Always at the end
    if settings.MIDDLEWARE_CORS:
        app.add_middleware(
            CORSMiddleware,
            allow_origins=['*'],
            allow_credentials=True,
            allow_methods=['*'],
            allow_headers=['*'],
        )


def register_router(app: FastAPI):
    # register api endpoints here.
    app.include_router(main_router)
